package dev.cerus.jdasc;

import dev.cerus.jdasc.command.ApplicationCommandOption;
import dev.cerus.jdasc.command.ApplicationCommandOptionChoice;
import dev.cerus.jdasc.command.ApplicationCommandOptionType;
import dev.cerus.jdasc.command.CommandBuilder;
import dev.cerus.jdasc.components.ActionRow;
import dev.cerus.jdasc.components.Button;
import dev.cerus.jdasc.components.Component;
import dev.cerus.jdasc.components.ComponentListener;
import dev.cerus.jdasc.interaction.Interaction;
import java.util.Arrays;
import javax.security.auth.login.LoginException;
import net.dv8tion.jda.api.JDA;
import net.dv8tion.jda.api.JDABuilder;
import net.dv8tion.jda.api.requests.GatewayIntent;

public class test {

    public static void main(final String[] args) throws LoginException, InterruptedException {

        final JDA jda = JDABuilder.create("NjIwNDE0MjczNDYxNTUxMTA1.XXWb0Q.-8jGaY61pMUlY_kUvrCjIbD2HZM", GatewayIntent.GUILD_EMOJIS, GatewayIntent.GUILD_MESSAGES, GatewayIntent.DIRECT_MESSAGES).setRawEventsEnabled(true).build().awaitReady();
        System.out.println("INIT");
        JDASlashCommands.initialize(jda, "NjIwNDE0MjczNDYxNTUxMTA1.XXWb0Q.-8jGaY61pMUlY_kUvrCjIbD2HZM", "620414273461551105");
        System.out.println("INIT DONE");


        JDASlashCommands.submitGuildCommand(new CommandBuilder()
                .name("test-command0") // Set command name to '/test-command'
                .desc("My cool test command")
                .option(new CommandBuilder.SubCommandGroupBuilder()
                        .name("some-group") // Specify a group that can hold multiple sub commands
                        .desc("This is a wonderful group")
                        .option(new CommandBuilder.SubCommandBuilder()
                                .name("hello") // Specify sub command 'hello' (/test-command some-group hello)
                                .desc("Greet a user")
                                .option(new ApplicationCommandOption(
                                        ApplicationCommandOptionType.USER,
                                        "user", // Note the lower case name - Names have to be lower case or else things could break
                                        "Specify a user to greet",
                                        true
                                ))
                                .build())
                        .option(new CommandBuilder.SubCommandBuilder()
                                .name("animal") // Specify sub command 'animal' (/test-command some-group animal)
                                .desc("Show a animal picture")
                                .choices( // Only allow certain values: Cat, Dog and Platypus
                                        ApplicationCommandOptionType.STRING, // Specify type of the choice: STRING or INTEGER
                                        "animal", // Note the lower case name - Names have to be lower case or else things could break
                                        "Specify the animal",
                                        new ApplicationCommandOptionChoice("Cat", "cat"),
                                        new ApplicationCommandOptionChoice("Dog", "cat"),
                                        new ApplicationCommandOptionChoice("Platypus", "platypus")
                                )
                                .build())
                        .build())
                // guild id
                .build(), 594215051754340372L, interaction -> {
            System.out.println("We got an interaction! Yay!");
            interaction.acknowledge();
        });


        JDASlashCommands.addComponentListener(interaction -> {
            final Component clickedComponent = interaction.getClickedComponent();
            if (clickedComponent instanceof Button) {
                final Button button = clickedComponent.cast();
                if (!button.getCustomId().equals("my_btn")) {
                    interaction.respond("You clicked " + button.getLabel() + "!");
                }
            }
        });


        JDASlashCommands.addOneTimeComponentListener("my_btn", interaction -> {
            final Component clickedComponent = interaction.getClickedComponent();
            if (clickedComponent instanceof Button) {
                final Button button = clickedComponent.cast();
                interaction.respond("You clicked " + button.getLabel() + "! Click it again and nothing will happen.");
            }
        });

        JDASlashCommands.submitGuildCommand(new CommandBuilder()
                .name("test1")
                .desc("Test command")
                .build(), 594215051754340372L, interaction -> {
            interaction.respond("Available actions:", Arrays.asList(
                    ActionRow.of(
                            Button.normalButton(Button.Style.PRIMARY, "Action 1", "my_btn"),
                            Button.normalButton(Button.Style.SECONDARY, "Action 2", "my_btn_0"),
                            Button.normalButton(Button.Style.DANGER, "Action 3", "my_btn_1"),
                            Button.normalButton(Button.Style.SUCCESS, "Action 4", "my_btn_2")
                    ),
                    ActionRow.of(
                            Button.emojiButton(Button.Style.SUCCESS, "Emoji!", "my_btn_3",
                                    Button.PartialEmoji.getDefaultEmoji("❤️")),
                            Button.emojiButton(Button.Style.DANGER, "Another emoji!", "my_btn_4",
                                    Button.PartialEmoji.getEmojiFromEmote(jda.getEmoteById(850779306803986442L)))
                            //Button.emojiLinkButton(Button.Style.DANGER, "Emoji with link!", "https://cerus.dev",
                            //        Button.PartialEmoji.getDefaultEmoji("✨")),
                            //Button.linkButton(Button.Style.SECONDARY, "Link!", "https://discord.com")
                    )
            ));
        });

        JDASlashCommands.addComponentListener(new ComponentListener() {
            @Override
            public void onInteraction(final Interaction interaction) {
                this.handleButton(interaction, (Button) interaction.getClickedComponent());
            }

            private void handleButton(final Interaction interaction, final Button button) {
                //interaction.respond("You clicked " + button.getCustomId() + " (" + button.getLabel() + ")");
            }
        });
        JDASlashCommands.submitGuildCommand(new CommandBuilder()
                .name("sup")
                .desc("Whats up?")
                .build(), 594215051754340372L, interaction -> {
            System.out.println("YES");
            interaction.respond("Affe", Arrays.asList(
                    ActionRow.of(
                            Button.normalButton(Button.Style.DANGER, "Raus", "1"),
                            Button.normalButton(Button.Style.PRIMARY, "E", "e")
                                    .oneTimeListener(intr -> {
                                        intr.respond("Nö");
                                    })
                    )
            )).whenComplete((unused, throwable) -> {
                interaction.sendFollowup("Neee", Arrays.asList(
                        ActionRow.of(Button.normalButton(Button.Style.PRIMARY, "Neeeee", "ne"))
                ));
            });
        });/*.whenComplete((aLong, throwable) -> {
            System.out.println("CREATED COMMAND " + aLong);
            if (throwable != null) {
                throwable.printStackTrace();
                if (throwable instanceof DiscordApiException) {
                    try {
                        System.out.println(((DiscordApiException) throwable).getResponse().body().string());
                    } catch (final IOException e) {
                        e.printStackTrace();
                    }
                }
            }
        });*/
    }

}
